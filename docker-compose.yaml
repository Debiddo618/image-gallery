version: '3'  # Specifies the version of the Docker Compose file format.

services:  # Defines the services to be run by Docker Compose.
  frontend:  # Service for the frontend application.
    restart: always  # Automatically restart the container if it stops.
    build: ./frontend  # Build the Docker image for the frontend using the Dockerfile located in the ./frontend directory.
    ports:
      - '3000:3000'  # Maps port 3000 of the host to port 3000 of the container, exposing the frontend app.
    volumes:
      - /app/node_modules  # Prevents node_modules from being overwritten by the host's empty directory.
      - ./frontend:/app  # Mounts the ./frontend directory from the host to /app in the container, allowing live code updates.

  api:  # Service for the API backend.
    restart: always  # Automatically restart the container if it stops.
    build: ./api  # Build the Docker image for the API using the Dockerfile located in the ./api directory.
    ports:
      - '5050:5050'  # Maps port 5050 of the host to port 5050 of the container, exposing the API.
    volumes:
      - ./api:/app  # Mounts the ./api directory from the host to /app in the container, allowing live code updates.

  mongo:  # Service for the MongoDB database.
    image: mongo  # Use the official MongoDB image from Docker Hub.
    restart: always  # Automatically restart the container if it stops.
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}  # Sets the root username for MongoDB.
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}  # Sets the root password for MongoDB.
    volumes:
      - mongodb_data:/data/db  # Persists MongoDB data by mounting the volume to the /data/db directory in the container.

  mongo-express:  # Service for Mongo Express, a web-based MongoDB admin interface.
    image: mongo-express  # Use the official Mongo Express image from Docker Hub.
    restart: always  # Automatically restart the container if it stops.
    ports:
      - 8081:8081  # Maps port 8081 of the host to port 8081 of the container, exposing Mongo Express.
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo  # Sets MongoDB server host to connect to the 'mongo' service.
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}  # Sets the admin username to connect to MongoDB.
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}  # Sets the admin password to connect to MongoDB.
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/  # Provides the connection URL to MongoDB (note: the password here is different, typically for example purposes).
      ME_CONFIG_BASICAUTH: false  # Disables basic authentication for Mongo Express (not recommended for production).
    depends_on:
      - mongo  # Ensures that the 'mongo' service starts before 'mongo-express'.

volumes:  # Defines the volumes to be used in the services.
  mongodb_data:  # Named volume for persisting MongoDB data.
